// Code generated by MockGen. DO NOT EDIT.
// Source: service.go
//
// Generated by this command:
//
//	mockgen -source=service.go -destination=mocks/service.go -package=mocks
//
// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	binary "github.com/nayakunin/gophkeeper/internal/commands/add/binary"
	generated "github.com/nayakunin/gophkeeper/proto"
	gomock "go.uber.org/mock/gomock"
)

// MockApi is a mock of Api interface.
type MockApi struct {
	ctrl     *gomock.Controller
	recorder *MockApiMockRecorder
}

// MockApiMockRecorder is the mock recorder for MockApi.
type MockApiMockRecorder struct {
	mock *MockApi
}

// NewMockApi creates a new mock instance.
func NewMockApi(ctrl *gomock.Controller) *MockApi {
	mock := &MockApi{ctrl: ctrl}
	mock.recorder = &MockApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockApi) EXPECT() *MockApiMockRecorder {
	return m.recorder
}

// PrepareBinaryRequest mocks base method.
func (m *MockApi) PrepareBinaryRequest(result *binary.ParseBinaryResult, encryptionKey []byte) (*generated.AddBinaryDataRequest, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PrepareBinaryRequest", result, encryptionKey)
	ret0, _ := ret[0].(*generated.AddBinaryDataRequest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PrepareBinaryRequest indicates an expected call of PrepareBinaryRequest.
func (mr *MockApiMockRecorder) PrepareBinaryRequest(result, encryptionKey any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrepareBinaryRequest", reflect.TypeOf((*MockApi)(nil).PrepareBinaryRequest), result, encryptionKey)
}
