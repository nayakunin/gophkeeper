syntax = "proto3";

package gophkeeper;

option go_package = "shortener/internal/generated";

// The auth service definition
service AuthService {
  rpc AuthenticateUser (AuthenticateUserRequest) returns (AuthenticateUserResponse);
}

// The registration service definition
service RegistrationService {
  rpc RegisterUser (RegisterUserRequest) returns (Empty);
}

// The data service definition
service DataService {
  rpc AddLoginPasswordPair (AddLoginPasswordPairRequest) returns (AddLoginPasswordPairResponse);
  rpc AddTextData (AddTextDataRequest) returns (AddTextDataResponse);
  rpc AddBinaryData (AddBinaryDataRequest) returns (AddBinaryDataResponse);
  rpc AddBankCardDetail (AddBankCardDetailRequest) returns (AddBankCardDetailResponse);
  rpc GetLoginPasswordPairs (GetLoginPasswordPairsRequest) returns (GetLoginPasswordPairsResponse);
  rpc GetTextData (Empty) returns (GetTextDataResponse);
  rpc GetBinaryData (Empty) returns (GetBinaryDataResponse);
  rpc GetBankCardDetails (GetBankCardDetailsRequest) returns (GetBankCardDetailsResponse);
}

// Common request and response messages
message Empty {}

// Registration-related requests and responses
message RegisterUserRequest {
  string username = 1;
  string password = 2;
}

// Auth-related requests and responses
message AuthenticateUserRequest {
  string username = 1;
  string password = 2;
}

message AuthenticateUserResponse {
  string token = 1;
  string encryption_key = 3;
}

// Data-related requests and responses
message AddLoginPasswordPairRequest {
  string service_name = 1;
  string login = 2;
  string encrypted_password = 3;
  string description = 4;
}

message AddLoginPasswordPairResponse {
  string message = 1;
  bool success = 2;
}

message AddTextDataRequest {
  string description = 1;
  string encrypted_text = 2;
}

message AddTextDataResponse {
  string message = 1;
  bool success = 2;
}

message AddBinaryDataRequest {
  string description = 1;
  bytes encrypted_data = 2;
}

message AddBinaryDataResponse {
  string message = 1;
  bool success = 2;
}

message AddBankCardDetailRequest {
  string card_name = 1;
  string encrypted_card_number = 2;
  string encrypted_expiry_date = 3;
  string encrypted_cvc = 4;
  string description = 5;
}

message AddBankCardDetailResponse {
  string message = 1;
  bool success = 2;
}

message GetLoginPasswordPairsRequest {
  string service_name = 1;
}

message LoginPasswordPair {
  int64 id = 1;
  string login = 2;
  string encrypted_password = 3;
  string description = 4;
  string service_name = 5;
}

message GetLoginPasswordPairsResponse {
  repeated LoginPasswordPair login_password_pairs = 1;
}

message GetTextDataResponse {
  int64 id = 1;
  string encrypted_text = 2;
  string description = 3;
}

message GetBinaryDataResponse {
  int64 id = 1;
  bytes encrypted_data = 2;
  string description = 3;
}

message GetBankCardDetailsRequest {
  string card_name = 1;
}

message BankCardDetail {
  int64 id = 1;
  string encrypted_card_name = 2;
  string encrypted_card_number = 3;
  string encrypted_expiry_date = 4;
  string encrypted_cvc = 5;
  string description = 6;
}

message GetBankCardDetailsResponse {
  repeated BankCardDetail bank_card_details = 1;
}
